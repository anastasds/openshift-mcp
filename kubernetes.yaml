apiVersion: v1
kind: ServiceAccount
metadata:
  name: mcp-server
  namespace: opendatahub
---
# Give the pod read-only access to namespace resources if your MCP server needs to
# read/list things (adjust as needed).
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: mcp-namespace-view
  namespace: opendatahub
rules:
  - apiGroups: [""]
    resources: ["pods","services","endpoints","configmaps","secrets"]
    verbs: ["get","list","watch"]
  - apiGroups: ["apps"]
    resources: ["deployments","replicasets","statefulsets"]
    verbs: ["get","list","watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: mcp-namespace-view-binding
  namespace: opendatahub
subjects:
  - kind: ServiceAccount
    name: mcp-server
    namespace: opendatahub
roleRef:
  kind: Role
  name: mcp-namespace-view
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubernetes-mcp-server
  namespace: opendatahub
  labels:
    app: kubernetes-mcp-server
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kubernetes-mcp-server
  template:
    metadata:
      labels:
        app: kubernetes-mcp-server
    spec:
      serviceAccountName: mcp-server
      securityContext:
        runAsNonRoot: true
        # If your image has a non-root user baked in (recommended), set its UID here:
        # runAsUser: 10001
      containers:
        - name: server
          image: quay.io/redhat-ai-services/kubernetes-mcp-server
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
          env:
            # Add whatever your MCP server expects; examples:
            - name: LOG_LEVEL
              value: info
            - name: PORT
              value: "8080"
            # If it needs kube in-cluster config, it will pick it up via the SA token automatically.
          resources:
            requests:
              cpu: 250m
              memory: 256Mi
            limits:
              cpu: "1"
              memory: 512Mi
---
apiVersion: v1
kind: Service
metadata:
  name: kubernetes-mcp-server
  namespace: opendatahub
  labels:
    app: kubernetes-mcp-server
spec:
  selector:
    app: kubernetes-mcp-server
  ports:
    - name: http
      port: 80
      targetPort: 8080
  type: ClusterIP